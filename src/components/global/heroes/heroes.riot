<heroes>
  <h2>My Heroes</h2>
  <ul class="heroes">
    <li
      each={ hero in heroes }
    >
      <button
        type="button"
        class={ hero.id === selectedHero.id && 'selected'}
        onclick={ handleSelect }
        data={ hero }
      >
        <span class="badge">{ hero.id }</span>
        <span class="name">{ hero.name }</span>
      </button>
    </li>
  </ul>

  <hero-detail hero={ selectedHero } handle-input={ handleInput } />
  <messages />

  <script>
    import heroService from '@/services/hero.service';
    import messageService from '@/services/message.service';
    import HeroDetail from '@/components/global/hero-detail/hero-detail.riot';
    import Messages from '@/components/global/messages/messages.riot';

    export default {
      heroes: [],
      selectedHero: {},
      onBeforeMount() {
        heroService.on('heroesUpdated', (heroes) => {
          this.heroes = heroes;
        });

        heroService.getHeroes();
        messageService.add('HeroService: fetched heroes');
      },
      handleInput(e) {
        this.selectedHero.name = e.target.value;
        this.heroes.forEach((item) => {
          if (item.id === this.selectedHero.id) {
            item.name = e.target.value;
          }
        });
        this.update();
      },
      handleSelect(e) {
        this.selectedHero.id = e.target.closest('button').data.id;
        this.selectedHero.name = e.target.closest('button').data.name;
        messageService.add(`HeroesComponent: Selected hero id=${this.selectedHero.id}`);
        this.update();
      }
    }
  </script>

  <style>
    /* HeroesComponent's private CSS styles */
    .heroes {
      margin: 0 0 2em 0;
      list-style-type: none;
      padding: 0;
      width: 15em;
    }

    .heroes li {
      display: flex;
    }

    .heroes button {
      flex: 1;
      cursor: pointer;
      position: relative;
      left: 0;
      background-color: #EEE;
      margin: .5em;
      padding: 0;
      border-radius: 4px;
      display: flex;
      align-items: stretch;
      height: 1.8em;
    }

    .heroes button:hover {
      color: #2c3a41;
      background-color: #e6e6e6;
      left: .1em;
    }

    .heroes button:active {
      background-color: #525252;
      color: #fafafa;
    }

    .heroes button.selected {
      background-color: black;
      color: white;
    }

    .heroes button.selected:hover {
      background-color: #505050;
      color: white;
    }

    .heroes button.selected:active {
      background-color: black;
      color: white;
    }

    .heroes .badge {
      display: inline-block;
      font-size: small;
      color: white;
      padding: 0.8em 0.7em 0 0.7em;
      background-color: #405061;
      line-height: 1em;
      margin-right: .8em;
      border-radius: 4px 0 0 4px;
    }

    .heroes .name {
      align-self: center;
    }
  </style>
</heroes>